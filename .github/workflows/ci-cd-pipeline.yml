name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ejecuta el pipeline al hacer push a la rama main
  pull_request:  # Ejecuta el pipeline al crear un PR
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout del c贸digo fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Ejecutar pruebas
      - name: Run tests
        run: npm test

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout del c贸digo fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # Iniciar sesi贸n en el registro de contenedores (Azure Container Registry en este caso)
      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.AZURE_REGISTRY_USERNAME }}" | docker login ${{ secrets.AZURE_REGISTRY_URL }} --username ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin

      # Construir y subir la imagen Docker
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.AZURE_REGISTRY_URL }}/my-app:latest .
          docker push ${{ secrets.AZURE_REGISTRY_URL }}/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      # Checkout del c贸digo fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar acceso a Kubernetes (kubeconfig)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
